# Travis CI configuration file
#
# ICRAR - International Centre for Radio Astronomy Research
# (c) UWA - The University of Western Australia, 2018
# Copyright by UWA (in the framework of the ICRAR)
# All rights reserved
#
# Contributed by Pascal Elahi
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307  USA
#

# VARIABLES
language: cpp
sudo: false

package_list:
  - &package_codelint
    - clang-format-3.8
  - &package1
    - g++-5
    - libhdf5-dev
    - hdf5-tools 
    - libgsl0-dev
  - &package2
    - g++-5
    - libhdf5-dev
    - hdf5-tools
    - libgsl0-dev
    - libopenmpi-dev
  - &package3
    - g++-5
    - libhdf5-dev
    - hdf5-tools
    - libgsl0-dev
    - libopenmpi-dev
  - &package4
    - g++-6
    - libhdf5-dev
    - hdf5-tools
    - libgsl0-dev
    - libopenmpi-dev
  - &package5
    - g++-7
    - libhdf5-dev
    - hdf5-tools
    - libgsl0-dev
    - libopenmpi-dev

scripts_list:
  - &scripts_compile
    - .travis/install.sh
    - .travis/test.sh
  - &scripts_codelint
    - .travis/test_codelint.sh

build_list:
  - &codelint
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *codelint
    env: TEST_BRANCH=feature/format
    script: &scripts_codelint

  - &build1
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *package1
    script: &scripts_compile
    env: COMPILER=g++-5
  - &build2
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *package2
    script: &scripts_compile
    env: COMPILER=g++-5
  - &build3
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *package2
    script: &scripts_compile
    env: COMPILER=g++-5 USEGAS=1 USESTARS=1
  - &build4
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *package3
    script:
    script: &scripts_compile
    env: COMPILER=g++-5 USESWIFT=1
  - &build5
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *package4
    script:
    script: &scripts_compile
    env: COMPILER=g++-6
  - &build6
    compiler: gcc
    addons:
     apt:
      sources: ubuntu-toolchain-r-test
      packages: *package5
    script:
    script: &scripts_compile
    env: COMPILER=g++-7

# We try with both GNU and LLVM
# When running with gcc-6 we also collect coverage information
# and upload it to coveralls
matrix:
  include:
    - stage: Code Lint
      <<: *package_codelint
    - stage: Install
      <<: *build1
    - stage: Install
      <<: *build2
    - stage: Install
      <<: *build3
    - stage: Install
      <<: *build4
    - stage: Install
      <<: *build5
    - stage: Install
      <<: *build6
    # Scenario driven test steps can be added here
